<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_Studio_One_Help_New" data-mc-search-type="Stem" data-mc-help-system-file-name="StudioOne4ReferenceManual.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Built-in Virtual Instruments">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Note FX</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/Simple.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/styles.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Introduction.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <ul class="nocontent menu _Skins_ContextMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/Studio_One_4_5_Reference_Manual.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                    </ul>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h2 data-mc-conditions="General.Online"><a name="kanchor121"></a>Note FX</h2>
                                                <p data-mc-conditions="General.Online">Note FX are real-time effects processors that change and reinterpret incoming note data before it reaches your choice of plug-in instrument or external MIDI&#160;device. Arpeggiator, Chorder, and Repeater are most useful for creative expansion and adaptation of note data. Input Filter is a utility processor that limits note output to a selected range of note and velocity values. You assign Note FX to Instrument Tracks in the Note FX&#160;section of the Track Inspector. For more information, see <a href="../Editing_Topics/Track_and_Event_Inspectors.htm#Track">Track Inspector</a>.</p>
                                                <p data-mc-conditions="General.Online">Once you've loaded one or more Note FX processors onto an Instrument Track, you can quickly access the related settings by clicking the Note FX Editor button <img src="../Resources/Images/StudioOneImages/Note Effects/NoteFXEditorButton.png" /> on the control area for that Track in Arrange view. You can also access these settings by double-clicking one of the processors in the Note FX section of the Track Inspector.</p>
                                                <p data-mc-conditions="General.Online">You can save and load Note FX settings as presets, just as you can with other instruments and effects. For more information on saving and loading presets, see the <a href="../Mixing_Topics/Effects_Signal_Routing.htm#Navigate">Signal Routing</a> chapter.</p>
                                                <h3 data-mc-conditions="General.Online">Rendering Note FX</h3>
                                                <p data-mc-conditions="General.Online">If you wish to make the effects of Note FX processing permanent (part of the note data, rather than a real-time process), select the Track and navigate to <span class="Italic">Event/Render Instrument Tracks</span>, or [Right]/[Ctrl]-click the desired Part in Arrange view and choose <span class="Italic">Instrument Parts/Render Instrument Tracks</span> from the pop-up menu.</p>
                                                <p data-mc-conditions="General.Online">This also makes permanent any transposition or velocity changes you've made within the Inspector view for the track. </p>
                                                <h3 data-mc-conditions="General.Online"><a name="kanchor122"></a>Arpeggiator</h3>
                                                <p data-mc-conditions="General.Online">
                                                    <img src="../Resources/Images/StudioOneImages/Arpeggiator_383x163.png" style="width: 383;height: 163;" />
                                                </p>
                                                <p data-mc-conditions="General.Online">Arpeggiator turns chords (as well as single notes) into arpeggios—rhythmic cycles of single notes, derived from the notes currently held. Like the arpeggiator functions found in many synthesizers, Arpeggiator creates repeating patterns of notes that can travel upwards in pitch, downwards, up-and-down, down-and-up, or in a randomized pattern. You can also use Arpeggiator to play repeated patterns of whole chords, or note patterns that follow the order in which notes are played.</p>
                                                <p data-mc-conditions="General.Online">Going beyond the basics, you can use the Pattern function to create rhythmic patterns of velocity and note length that the arpeggio follows as it plays, opening many creative options for repeating musical articulations.</p>
                                                <p data-mc-conditions="General.Online">The following parameters and functions are available in Arpeggiator:</p>
                                                <ul>
                                                    <li value="1" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Arpeggio Direction</span> Choose the note direction that creates the pattern you want, from the following options:<ul><li value="1" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Up </span>The arpeggio starts at the lowest held note and travels upward through the held notes, then returns to the lowest note as the arpeggio begins again.</li><li value="2" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Down </span>The arpeggio starts at the highest held note and travels downward through the held notes, then returns to the highest note as the arpeggio begins again.</li><li value="3" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Up/Down</span> The arpeggio starts at the lowest held note, travels upward to the highest, then travels back down to the lowest note, and the arpeggio begins again.</li><li value="4" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Down/Up</span> The arpeggio starts at the highest held note, travels downward to the lowest, then travels back up to the highest note, and the arpeggio begins again.</li><li value="5" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Random </span>The arpeggio plays the currently held notes in a random pattern.</li><li value="6" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Chord Mode</span> The currently held chord&#160;(or single note) is repeated as long as it is held.</li><li value="7" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">From Input</span> The arpeggio pattern is derived from the order in which notes are played and held.</li></ul></li>
                                                    <li value="2" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Octave Range</span> Lets you extend the range of the arpeggio by mirroring the currently held notes an octave above (at a setting of 2), the two octaves above (at 3), or the three octaves above (at 4). At 1, no mirroring occurs and the arpeggio plays according to the held notes. Setting Octave Range above 1 when in Chord Mode causes an upward-rising cycle of repeated chords, an octave apart, its length determined by the Octave Range setting.</li>
                                                    <li value="3" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Rate </span>Lets you select a rhythmic value, determining the length of each arpeggio step. Range is from a bar to a 64th-note, in all triplet and dotted varieties.</li>
                                                    <li value="4" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Swing </span>Lets you add swing to the timing of the arpeggio, creating a range of rhythmic feels. For more information on swing timing, see <a href="../Editing_Topics/The_Grid.htm#Concept-Swing">Swing</a>.</li>
                                                    <li value="5" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Gate </span>Acts as an overall note-length control. Lower settings create shorter notes, and higher settings create longer notes. When a Pattern is active, Gate works relative to the gate settings in the Pattern.</li>
                                                    <li value="6" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Hold </span>Enable this to hold all currently played notes. Each new chord or single note that you play replaces the previous memory and holds until the next note input is received.</li>
                                                    <li value="7" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Velocity </span>Acts as an overall note-velocity control. When a Pattern is active, Velocity works relative to the velocity settings in the Pattern.</li>
                                                    <li value="8" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Pattern/Fix Switches</span> Choose Pattern to allow Velocity data from the Pattern to control note velocity (in tandem with the Velocity control). Choose Fix to set a fixed velocity for all notes, with the Velocity control.</li>
                                                    <li value="9" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Pattern </span>This is a 32-step pattern sequencer you can use to create repeating patterns of note velocity and gate (length) that are applied to the control output of the Arpeggiator. The Pattern area contains the following controls:<ul><li value="1" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Activate Pattern</span> Toggle this on or off to enable or disable the Pattern sequencer. </li><li value="2" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Pattern Sequencer</span> This series of sliders is where you'll create your velocity/gate pattern. You can click and drag each step in the sequence vertically&#160;(to set velocity)&#160;and horizontally (to set gate length). 16 steps are shown at any one time. To reach the second set of 16 steps, click the right-arrow to the right of the pattern. To return to steps 1-16, click the left-arrow to the right of the pattern.</li><li value="3" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Pattern Length</span> Lets you choose the length of the pattern.</li></ul></li>
                                                </ul>
                                                <h3 data-mc-conditions="General.Online"><a name="kanchor123"></a>Chorder</h3>
                                                <p data-mc-conditions="General.Online">
                                                    <img src="../Resources/Images/StudioOneImages/Chorder_384x199.png" style="width: 384;height: 199;" />
                                                </p>
                                                <p data-mc-conditions="General.Online">Chorder is an intelligent chord generator that lets you trigger chords by playing single notes. You can specify intervals in the chord manually, or capture chord shapes played on the keyboard. Each key can trigger a different chord of your choice, or you can choose a single chord shape, to play across multiple keys. You also have control over the area of the keyboard that triggers these chords, letting you, for example, trigger chords in the upper part of the keyboard, while playing single-note bass parts in the lower half.</p>
                                                <p data-mc-conditions="General.Online">The central interface shows two rows of piano-style keys. The lower row is used to audition chord shapes; click and hold a key to play. In Learn Mode, the lower row lets you select a keyboard key for chord assignment (selected key turns orange). The upper row displays the notes being played (both by MIDI&#160;input and the chord generator), and which keyboard keys have been assigned chord shapes (small square at the bottom of each key turns orange). In Learn Mode, the upper row displays the currently assigned chord shape for the selected key (chosen notes turn orange).</p>
                                                <h4 data-mc-conditions="General.Online">Assigning Chord Shapes</h4>
                                                <p data-mc-conditions="General.Online">Chorder defaults to an example chord setting that you can play with. The next thing you'll want to do is assign your own chord shape to one or more keyboard keys. You can do so by following this procedure:</p>
                                                <ol>
                                                    <li value="1" data-mc-conditions="General.Online">Press the [Learn Mode] button to put Chorder into Learn Mode.</li>
                                                    <li value="2" data-mc-conditions="General.Online">Select a keyboard key for chord assignment by clicking it in the lower row of keys. The selected key turns orange. C3 is selected by default.</li>
                                                    <li value="3" data-mc-conditions="General.Online">Build the chord shape of your choice by selecting notes in the upper row of keys with the mouse, or by playing notes on a connected MIDI controller. Selected notes turn orange. Click or play a note a second time to deselect it.</li>
                                                    <li value="4" data-mc-conditions="General.Online">If you want to assign custom chord shapes to other keyboard keys, select each chosen key in the lower keyboard, and assign chord shapes to each, as described in step 3. </li>
                                                    <li value="5" data-mc-conditions="General.Online">Press [Learn Mode] again to disengage, and begin playing.</li>
                                                </ol>
                                                <p data-mc-conditions="General.Online">The following parameters and functions are available in Chorder:</p>
                                                <ul>
                                                    <li value="1" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Learn Mode </span>Enables Learn Mode. When Learn Mode is active, the following controls appear:<ul><li value="1" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Clear All </span>Clears all chord assignments for all keyboard keys.</li><li value="2" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Clear </span>Clears chord assignments for the currently selected keyboard key.</li><li value="3" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Copy </span>Copies the currently shown note pattern, for pasting into other keys.</li><li value="4" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Paste </span>Applies copied note pattern data to the currently selected key.</li><li value="5" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Selected Keyboard Key </span>Shows the pitch of the currently selected keyboard key. To specify a particular note value, click this field to select it and type in the note name and octave number (such as C3).&#160;You can also click-and-drag in the note field, or click on the note field and select with your mouse's scroll wheel.</li></ul></li>
                                                    <li value="2" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Chord Range </span>Drag the ends of this slider to select the portion of the MIDI&#160;keyboard that triggers chords.</li>
                                                    <li value="3" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Transpose </span>Lets you transpose the chord output, in a range of -12 to +12 semitones. Notes outside the Chord Range are unaffected.</li>
                                                    <li value="4" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Auto Fill </span>Enable this to automatically assign any unassigned keyboard keys in the Chord Range to the chord shape mapped to the lowest keyboard key. Disable to ensure that only assigned keyboard keys trigger chords.</li>
                                                    <li value="5" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Filter Outside </span>Enable this to stop all notes that fall outside of the Chord Range. Disable to allow playing notes outside the range.</li>
                                                </ul>
                                                <h3 data-mc-conditions="General.Online"><a name="kanchor124"></a>Repeater</h3>
                                                <p data-mc-conditions="General.Online">
                                                    <img src="../Resources/Images/StudioOneImages/Repeater_384x167.png" style="width: 384;height: 167;" />
                                                </p>
                                                <p data-mc-conditions="General.Online">Repeater works just like it sounds—it creates rhythmic repetitions of the notes you play. These repetitions can be simple copies of incoming notes, or can change in velocity, gate length, and pitch as the pattern plays. </p>
                                                <p data-mc-conditions="General.Online">The following parameters and features are available in Repeater:</p>
                                                <ul>
                                                    <li value="1" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Individual Velocity &amp;&#160;Gate</span> Engage to enable individual setting of note velocity and gate length for each step.</li>
                                                    <li value="2" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Individual Pitch</span> Engage to enable individual setting of note pitch for each step.</li>
                                                    <li value="3" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Sequencer </span>This lets you specify velocity, gate, and pitch values for each step in the sequence of repetitions. The following controls are available for each step:<ul><li value="1" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Level/Gate Slider </span>With Individual Velocity and Gate enabled, you can click and drag the upper edge of this slider up or down to set note velocity for the current step. You can also click and drag the right edge of the slider left or right to set note gate length for the current step. With Individual Velocity and Gate disabled, moving velocity or gate sliders manipulates that setting for all steps (equivalent to turning the Velocity Level and Gate knobs).</li><li value="2" data-mc-conditions="General.Online"><span class="SetOffSecondLevel">Pitch </span>With Individual Pitch enabled, you can click and drag this slider up or down to apply a positive or negative pitch transposition to the current step. With Individual Pitch disabled, moving a pitch slider changes pitch transposition for all steps simultaneously. At 0, no transposition occurs. </li></ul></li>
                                                    <li value="4" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Rate </span>Lets you set the rate of repetition. When Sync is enabled, you can choose a tempo-synced rhythmic value between one bar and one 64th-note, in all triplet and dotted varieties. When Sync is disabled, you can choose a repetition frequency between 2 and 25 Hz (repetitions per second).</li>
                                                    <li value="5" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Sync </span>Enable Sync to snap the Rate control to rhythmic values, in sync with Song tempo. Disable to set repetition speed in Hz.</li>
                                                    <li value="6" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Steps </span>Select your desired number of repetitions (and sequencer steps), from just two steps, to 32.</li>
                                                    <li value="7" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Velocity Level </span>Acts as an overall velocity level control, scaling every step's velocity, relative to its custom setting.</li>
                                                    <li value="8" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">(Velocity Relative to) Input </span>Enable this to derive overall repetition velocity from note input, attenuated or boosted by the setting of the Velocity Level control.</li>
                                                    <li value="9" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Velocity Scale </span>Turn this to introduce a sloping change in velocity in the sequence over time, relative to each step's setting. At center, no slope is added. Turned left of center, a downward slope is introduced. Turn to the right for an upward slope.</li>
                                                    <li value="10" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Gate </span>Acts as an overall gate length control, scaling every step's gate length, relative to its custom setting.</li>
                                                    <li value="11" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Gate Scale </span>Turn this to introduce a sloping change in gate length in the sequence over time, relative to each step's setting. At center, no slope is added. Turned left of center, each step in the sequence is shortened more than the last. Turn to the right, and each step is lengthened more than the last.</li>
                                                    <li value="12" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Pitch Scale </span>Turn this to introduce a sloping change in pitch in the sequence over time, relative to each step's setting. At center, no slope is added. Turned left of center, you get a range of downward pitch shift slopes. Turn to the right for upward slopes.</li>
                                                </ul>
                                                <h3 data-mc-conditions="General.Online"><a name="kanchor125"></a>Input Filter</h3>
                                                <p data-mc-conditions="General.Online">
                                                    <img src="../Resources/Images/StudioOneImages/InputFilter_385x228.png" style="width: 385;height: 228;" />
                                                </p>
                                                <p data-mc-conditions="General.Online">Input Filter lets you filter out unwanted notes before they reach your instrument or MIDI device. You can specify a range of note pitches to allow, and a range of note velocities to allow, and all notes that fall outside of either of those ranges are stopped. The following parameters are available in Input Filter:</p>
                                                <ul>
                                                    <li value="1" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Key Range (Low and High) </span>Set the low and high limits for note pitches. This can be done by moving the ends of the slider above the keyboard graphic, or by manipulating the Key Range displays by typing in values or scrolling through values with your pointing device's scroll function. Any incoming notes that fall outside of the chosen Key Range are stopped.</li>
                                                    <li value="2" data-mc-conditions="General.Online"><span class="SetOffFirstLevel">Minimum and Maximum Velocity </span>Set the low and high limits for note velocity. This can be done by moving the sliders to the left and right of the keyboard graphic, or by manipulating the Min Velocity and Max Velocity displays by typing in values or scrolling through values with your pointing device's scroll function. Any incoming notes that fall below the Min Velocity percentage or above the Max Velocity percentage are stopped.</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="FooterTable">
                                        <table style="mc-table-style: url('../Resources/TableStyles/Simple.css');margin-left: 0;margin-right: auto;" class="TableStyle-Simple" cellspacing="0">
                                            <col class="TableStyle-Simple-Column-Column1" />
                                            <tbody>
                                                <tr class="TableStyle-Simple-Body-Row1">
                                                    <td class="TableStyle-Simple-BodyB-Column1-Row1">
                                                        <p class="FooterTopicMasterLeftPadding">&#160;</p>
                                                    </td>
                                                    <td class="TableStyle-Simple-BodyA-Column1-Row1">
                                                        <p class="FooterTopicMaster"><span class="GeneralProductName">Studio One</span> Version <span class="GeneralVersionNumber">4.5</span></p>
                                                        <p class="FooterTopicMasterLastLine">Copyright © <span class="GeneralYear">2019</span>&#160;<span class="GeneralCompanyName">PreSonus Audio Electronics, Inc</span></p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <button class="button needs-pie print-button" type="button" title="Print">
                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                        </button>
                                        <div class="MCDropDown MCDropDown_Closed dropDown dropDownFooter"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot dropDownHotspotFooter MCDropDownHotSpot_ MCDropDownHotSpot_Footer MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="7" width="16" alt="Closed" data-mc-alt2="Open" />CONTACT US</a></span>
                                            <div class="MCDropDownBody dropDownBody dropDownBodyFooterTopicMaster">
                                                <table style="mc-table-style: url('../Resources/TableStyles/Simple.css');margin-left: 0;margin-right: auto;" class="TableStyle-Simple" cellspacing="0">
                                                    <col class="TableStyle-Simple-Column-Column1" style="width: 29px;" />
                                                    <col class="TableStyle-Simple-Column-Column1" />
                                                    <col class="TableStyle-Simple-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-Simple-Body-Row1">
                                                            <td class="TableStyle-Simple-BodyB-Column1-Row1">
                                                                <p class="FooterTopicMasterLastLineLeftPadding">
                                                                    <img src="../Resources/Images/ContactIcon.png" alt="" />
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-Simple-BodyB-Column1-Row1">
                                                                <p class="FooterTopicMaster"><span class="GeneralCompanyName">PreSonus Audio Electronics, Inc</span>
                                                                </p>
                                                                <p class="FooterTopicMaster"><span class="GeneralStreetAddress">18011 Grand Bay Court</span>
                                                                </p>
                                                                <p class="FooterTopicMaster"><span class="GeneralCityStateZip">Baton&#160;Rouge, LA 70809</span>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-Simple-BodyA-Column1-Row1">
                                                                <p>&#160;</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>